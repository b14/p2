<?php

/**
 * @file
 * Ding serendipity content
 *
 * This module provides a set of serendipity functions which deliver serendipity
 * content based on the available fields and entities in the ding2 profile.

 * TODO The DocBlock here does not seem to match the functionality of the
 * function. Please update it.
 *
 * TODO Based on the name I has expected that this module implemented
 * the serendipity_fallback hook (see ding_serendipity_append_fallback()) but
 * that is not the case. No module seems to implement this hook. Is it
 * intentional?
 */

/**
 * Implements hook_serendipity_info().
 */
function ding_serendipity_fallback_serendipity_info() {
  return array(
    'ting_object' => array(
      'title' => 'Fallback materials',
      'description' => 'Returns fallback content.',
      'keys' => array('ting_object'),
    ),
  );
}

/**
 * Ding Serendipity function for nodes related content.
 *
 * The content returned by this function consists of nodes from the site.
 * TODO The DocBlock here does not seem to match the functionality of the
 * function. Please update it.
 *
 * @context array
 *   Serendipity context array
 *
 * @return array
 *   Array of results, each result should contain a type and an id key.
 *   - Type is the entity Type.
 *   - id the entity id.
 */
function ding_serendipity_fallback_ting_object_serendipity_add($context) {
  $results = array();

  // Ensure that the context is set.
  if (!isset($context['ting_object'])) {
    return array();
  }

  // TODO Since this is the only module where the variable
  // ding_serendipity_search_string_final is used is should also be the module
  // responsible for the administration interface for it - not ding_serendipity.
  $query = variable_get('ding_serendipity_search_string_final');

  if (!empty($query)) {
    try {
      $results = ding_serendipity_do_search($query);
    }
    catch (Exception $e) {
      // TODO The type should be the name of the module.
      watchdog_exception(__FUNCTION__, $e);
    }

    foreach ($results as & $item) {
      // TODO This description seems to be related to the the search string.
      // Should it also be configurable?
      $item['info']['description'] = t('This is new content.');
    }
  }

  return $results;
}
