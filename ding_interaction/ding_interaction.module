<?php

/**
 * @file
 * Ding Interaction implements the proxy ding interaction pane
 * which is a place to display all sorts of information or suggested interaction
 * for the visitor.
 * The DI shuffles all available DI plugins and displays just one in random.
 * The idea is that the system contains alot of things we would like the user to
 * try out or to do, but we want it to be suggested in a not overwhelming way
 *
 * Exampel 1: (Full interaction)
 * The user logs in
 * DI shuffles all DI plugins and selects the "ding_entity_rating_loan_history"
 * The user is presented with a selection of previous loans and is encouraged
 * to rate them
 */

define('DING_INTERACTION_DEFAULT_COUNT', 5);

/**
 * Implements hook_ctools_plugin_directory().
 */
function ding_interaction_ctools_plugin_directory($owner, $plugin_type) {
  if ($owner == 'ctools' && $plugin_type == 'content_types') {
    return 'plugins/content_types';
  }
}

/**
 * Implements hook_menu().
 */
function ding_interaction_menu() {
  $items = array();

  $items['admin/config/ding/interaction'] = array(
    'title' => 'Ding interaction overview',
    'description' => 'Get an overview of the interaction elements',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('ding_interaction_admin_overview'),
    'access arguments' => array('administer ding interaction'),
    'file' => 'ding_interaction.admin.inc',
  );
  $items['admin/config/ding/interaction/key_overview/%'] = array(
    'title' => 'Settings',
    'description' => 'Set the settings for an interaction function',
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array(5),
    'access arguments' => array('administer ding interaction'),
  );
  $items['ding_interaction/%ctools_js/hide'] = array(
    'title' => 'Hide pane',
    'page callback' => 'ding_interaction_hide',
    'page arguments' => array(1),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function ding_interaction_permission() {
  return array(
    'administer ding interaction' => array(
      'title' => t('Administer ding interaction'),
    ),
  );
}

/**
 * Ajax callback.
 *
 * TODO If this function does nothing except hide a pane could it then be
 * handled clientside only? There does not seem to be a reason to involve the
 * server.
 */
function ding_interaction_hide($js = NULL) {
  if ($js) {
    ctools_include('ajax');
    $commands = array();
    // TODO: $ouput is undefied. Is something missing?
    $commands[] = ajax_command_remove('.pane-interaction-pane', $output);
    // TODO Please use ajax_deliver().
    print ajax_render($commands);
    exit;
  }
  else {
    return '';
  }
}

/**
 * Find modules which provide content for the interaction pane.
 *
 * @param bool $ignore_settings
 *   If set to true every content provider will be included.
 *
 * @return array
 *   An array of module info.
 */
function ding_interaction_available_content($ignore_settings = FALSE) {
  $modules = module_implements('ding_interaction_info');
  $content_providers = array();
  $active_modules = variable_get('ding_interaction_callbacks', array());
  foreach ($modules as $module) {
    $info = module_invoke($module, 'ding_interaction_info');
    if ($ignore_settings || isset($info['active']) && $info['active'] !== FALSE && !empty($active_modules[$module])) {
      $content_providers[$module] = $info;
    }
  }
  return $content_providers;
}

/**
 * Get ding interaction content.
 *
 * TODO Please document the function parameters.
 */
function ding_interaction_content($module_list = NULL, $count = DING_INTERACTION_DEFAULT_COUNT) {
  // TODO: Please add some comments about what the purpose of this
  // manipulation of user and edit is.
  global $user;
  $data = NULL;
  $edit = array();
  if (isset($user->data)) {
    $edit['data'] = $user->data;
  }
  else {
    $edit['data'] = array();
  }
  if (empty($edit['data']['ding_interaction'])) {
    $edit['data']['ding_interaction'] = array();
    $edit['data']['ding_interaction']['count'] = 0;
  }
  $output = array();

  // @todo: The count should be done per login and not per page view.
  if (empty($edit['data']['ding_interaction']['count']) || $edit['data']['ding_interaction']['count'] == 0) {
    if (!$module_list) {
      $module_list = ding_interaction_available_content();
    }
    if (count($module_list)) {
      $random = array_rand($module_list);
      $data = module_invoke($random, 'ding_interaction_view', $count);

      if (!$data) {
        return FALSE;
      }

      $output = array_merge($output, $module_list[$random]);
      if (!is_array($data)) {
        $output['data'] = $data;
      }
      else {
        $output['data'] = $data['data'];
        $output['title'] = $data['title'];
      }
    }
  }
  if (user_is_logged_in()) {
    $edit['data']['ding_interaction']['count'] += 1;
    if ($edit['data']['ding_interaction']['count'] >= variable_get('ding_interaction_page_count', 5)) {
      $edit['data']['ding_interaction']['count'] = 0;
    }
    user_save($user, $edit);
  }

  return $output;
}
